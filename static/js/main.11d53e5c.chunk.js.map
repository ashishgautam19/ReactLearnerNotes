{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","class","secondary","type","id","onClick","toggleMode","role","htmlFor","TextForm","mystyle","color","useState","text","setText","style","heading","value","backgroundColor","border","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","join","document","getElementById","select","navigator","clipboard","writeText","filter","element","length","fontFamily","defaultProps","Alert","height","alert","word","lower","charAt","slice","capitilize","msg","App","setMode","setAlert","message","setTimeout","body","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.11d53e5c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\"><strong>{props.title}</strong><span class=\"badge bg-secondary\">{props.secondary}</span></a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home </Link> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home </a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link  className=\"nav-link\" to=\"/about\">About us</Link>\r\n                        </li> */}\r\n\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n\r\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"><strong>{props.mode==='dark'?\"Enabled the dark mode\":\"Enabled the light Mode\"}</strong></label>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n// Specifies the default values for props:\r\nNavbar.defaultProps = {\r\n    title: 'set the title is required'\r\n};\r\n","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    let mystyle={\r\n        color: props.mode==='dark'?'white':'black'\r\n    }\r\n\r\n    let handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted into UpperCase\",'success')\r\n    }\r\n    \r\n    let handleDoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted into LowerCase\",'success')\r\n    }\r\n    \r\n    let handleClearText = () => {\r\n        let newText = \" \";\r\n        setText(newText);\r\n        props.showAlert(\"Converted into Clear text\",'success')\r\n    }\r\n    \r\n    const handleExtraSpaces = ()=>{\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"It's removed the ExtraSpace text\",'success')\r\n    }\r\n    const handleCopyText = ()=>{\r\n        let text =document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    let handleOnchange = (event) => {\r\n        setText(event.target.value);\r\n\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n            <div >\r\n                <h3  style={{color: props.mode === 'dark' ? 'white' : 'black'}}>{props.heading}</h3>\r\n                <div className=\"mb-3\">\r\n                    {/* <label for=\"exampleFormControlTextarea1\" class=\"form-label\">Example textarea</label> */}\r\n                    <textarea className=\"form-control\" value={text} style={{backgroundColor: props.mode === 'light' ? '#f0e5dc' : 'white', border : props.mode==='light'?'2px solid black':''}} onChange={handleOnchange} id=\"myBox\" rows=\"8\"></textarea>\r\n                    <button className=\"btn btn-primary my-2\" onClick={handleUpClick} >Convert to Uppercase</button>\r\n                    <button className=\"btn btn-primary my-2 mx-2\" onClick={handleDoClick} >Convert to Lowercase</button>\r\n                    <button className=\"btn btn-primary my-2 mx-2\" onClick={handleExtraSpaces} >Remove Extra Space</button>\r\n                    <button className=\"btn btn-primary my-2 mx-2\" onClick={handleClearText} >Clear the text</button>\r\n                    <button className=\"btn btn-primary my-2 mx-2\" onClick={handleCopyText} >Copy Text</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\" style={mystyle} >\r\n            <h3 >Your Text Summary</h3>\r\n            <p>Words are {text.split(\" \").filter((element)=>{ return element.length!==0;}).length} and Character are {text.length}</p>\r\n            <h3>Preview</h3>\r\n            <p>{text.length>0?text:<strong style={{fontFamily: 'Abril Fatface'}}>Enter the Text</strong>}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitilize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{ height: \"50px\" }}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type}   alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitilize(props.alert.type)}</strong>: {props.alert.msg}\r\n\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState } from 'react'\nimport './App.css';\n// import About from './components/About';\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n\n  }\n\n  let toggleMode = () => {\n    if (mode === 'dark') {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is on\", \"success\")\n      document.title = \"Shaklaka-Light mode\"\n      setInterval(() => {\n        document.title = \"Desi-boys\"\n      }, 2000);\n      setInterval(() => {\n        document.title = \"Desi-Girls\"\n      }, 1500);\n    } else {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#323d49';\n      showAlert(\"Dark mode is on\", \"success\")\n      document.title = \"Shaklaka-Dark mode\"\n    }\n  }\n  // Creating this for change of Enabled Word ...dark to light bt can't worked!!\n  // const [btxt, setbTxt] = useState(\"Enabled light mode\");\n  // let btnText = () => {\n  //   if (mode == 'white') {\n  //     setbTxt('Enabled dark mode')\n\n  //   } else {\n  //     setbTxt('Enabled light mode')\n\n  //   }\n  // }\n  return (\n    <>\n      {/* <Router> */}\n        {/* <Navbar title={\"Shaklaaka\"} mode={mode} btnText={btnText} toggleMode={toggleMode} secondary={\"Boom Boom\"} /> */}\n        <Navbar title={\"Shaklaaka\"} mode={mode} toggleMode={toggleMode} secondary={\"Boom Boom\"} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\">\n            </Route>\n          </Switch> */}\n          <TextForm showAlert={showAlert} heading={\"Enter the Txt \"} mode={mode} />\n        </div>\n        {/* <div className=\"container\">\n          <About />\n        </div> */}\n      {/* </Router> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}